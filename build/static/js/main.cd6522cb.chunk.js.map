{"version":3,"sources":["Section.js","features/mailSlice.js","EmailRow.js","firebase.js","EmailList.js","features/userSlice.js","Header.js","Login.js","Mail.js","SendMail.js","SidebarOption.js","Sidebar.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["Section","Icon","title","color","selected","className","style","borderBottom","mailSlice","createSlice","name","initialState","selectedMail","sendMessageIsOpen","reducers","state","action","payload","openSendMessage","closeSendMessage","actions","selectOpenMail","mail","selectSendMessageIsOpen","EmailRow","id","subject","description","time","history","useHistory","dispatch","useDispatch","onClick","push","Checkbox","IconButton","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","provider","GoogleAuthProvider","EmailList","useState","emails","setEmails","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","data","InboxIcon","PeopleIcon","LocalOfferIcon","to","message","timestamp","Date","seconds","toUTCString","userSlice","user","login","logout","selectUser","Header","useSelector","src","alt","placeholder","type","Avatar","signOut","then","photoUrl","Login","Button","variant","signInWithPopup","displayName","email","photoURL","catch","error","alert","Mail","SendMail","useForm","register","handleSubmit","errors","watch","formState","onSubmit","formData","console","log","add","FieldValue","serverTimestamp","required","SidebarOption","number","Sidebar","startIcon","fontSize","StarIcon","LabelImportantIcon","NearMeIcon","NoteIcon","ExpandMoreIcon","App","onAuthStateChanged","path","store","configureStore","reducer","mailReducer","userReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cd6522cb.chunk.js","sourcesContent":["import { BorderBottom } from '@material-ui/icons';\r\nimport React from 'react'\r\nimport \"./Section.css\";\r\n\r\nfunction Section({Icon,title,color,selected }) {\r\n    return (\r\n        <div \r\n          className={`section ${selected && \"section--selected\"}`}\r\n          style={{\r\n              borderBottom: `3px solid ${color}`,\r\n              color: `${selected && color}`,\r\n            }} \r\n        >\r\n            <Icon />\r\n            <h4>{title}</h4>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Section;\r\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const mailSlice = createSlice({\n  name: 'mail',\n  initialState: {\n    selectedMail: null,\n    sendMessageIsOpen: false,\n  },\n  reducers: {\n    selectedMail: (state, action) => {\n      state.selectedMail = action.payload;\n    },\n    openSendMessage: state => {\n      state.sendMessageIsOpen = true;\n    },\n    closeSendMessage: state => {\n      state.sendMessageIsOpen = false;\n    },\n  },\n});\n\nexport const { selectedMail, openSendMessage, closeSendMessage } = mailSlice.actions;\n\nexport const selectOpenMail = (state) => state.mail.selectedMail;\n\nexport const selectSendMessageIsOpen = state => state.mail.sendMessageIsOpen;\n\nexport default mailSlice.reducer;\n\n","import { IconButton } from '@material-ui/core';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport LabelImportantOutlinedIcon from '@material-ui/icons/LabelImportantOutlined';\r\nimport StarBorderOutlinedIcon from '@material-ui/icons/StarBorderOutlined';\r\n\r\nimport React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport \"./EmailRow.css\";\r\nimport { selectedMail } from './features/mailSlice';\r\n\r\nfunction EmailRow({ id,title,subject, description, time }) {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    \r\n    const openMail = () => {\r\n        dispatch(\r\n            selectedMail({\r\n                id,\r\n                title,\r\n                subject,\r\n                description,\r\n                time,\r\n            })\r\n        );\r\n        history.push(\"/mail\")\r\n    };\r\n\r\n    return (\r\n        \r\n        <div onClick={openMail} className=\"emailRow\">\r\n            <div className=\"emailRow__options\">\r\n                <Checkbox />\r\n                <IconButton>\r\n                    <StarBorderOutlinedIcon/>\r\n                </IconButton>\r\n                <IconButton>\r\n                    <LabelImportantOutlinedIcon />\r\n                </IconButton>\r\n\r\n            </div>\r\n            <h3 className=\"emailRow__title\">{title}</h3>\r\n\r\n            <div className=\"emailRow__message\">\r\n                <h4>\r\n                   {subject}{\"  \"}\r\n                   <span className=\"emailRow__description\">-\r\n                   {description}</span>\r\n                </h4>\r\n\r\n            </div>\r\n            <p className=\"emailRow__time\">{time}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmailRow;\r\n","import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyB_C2niL6dWkMZTv6K99DOGXss5n2YulUI\",\r\n    authDomain: \"clone-48b39.firebaseapp.com\",\r\n    projectId: \"clone-48b39\",\r\n    storageBucket: \"clone-48b39.appspot.com\",\r\n    messagingSenderId: \"455227906855\",\r\n    appId: \"1:455227906855:web:6330027911df5745342702\"\r\n  };\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {db,auth,provider};\r\n","import { Checkbox, Icon, IconButton } from '@material-ui/core';\r\nimport RedoIcon from '@material-ui/icons/Redo';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport React, { useEffect, useState } from 'react'\r\nimport \"./EmailList.css\";\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport KeyboardHideIcon from '@material-ui/icons/KeyboardHide';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\nimport Section from './Section';\r\nimport PeopleIcon  from '@material-ui/icons/People';\r\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\r\nimport EmailRow from './EmailRow';\r\nimport { db } from './firebase';\r\n\r\nfunction EmailList() {\r\n    const [emails, setEmails] = useState([]);\r\n    //connecting to the firestore database using useefect hook\r\n    useEffect(() => {\r\n        db.collection(\"emails\")\r\n        .orderBy(\"timestamp\", \"desc\")\r\n        .onSnapshot((snapshot) => \r\n            setEmails(\r\n                snapshot.docs.map((doc) => ({\r\n                    id: doc.id,\r\n                    data: doc.data(),\r\n                }))\r\n            )\r\n        );\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"emailList\">\r\n            <div className=\"emailList__settings\">\r\n                <div className=\"emailList__settingsLeft\">\r\n                    <Checkbox/>\r\n                    <IconButton>\r\n                        <ArrowDropDownIcon/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <RedoIcon/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVertIcon/>\r\n                    </IconButton>\r\n                </div>\r\n                <div className=\"emailList__settingsRight\">\r\n                    <IconButton>\r\n                        <ChevronLeft/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <ChevronRightIcon/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <KeyboardHideIcon/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <SettingsIcon />\r\n                    </IconButton>\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"emailList__sections\">\r\n                <Section Icon={InboxIcon} title=\"Primary\" color=\"red\" selected/>\r\n                <Section Icon={PeopleIcon} title=\"Social\" color=\"#1A73E8\"/>\r\n                <Section Icon={LocalOfferIcon} title=\"Promotions\" color=\"green\" />\r\n\r\n            </div> \r\n            <div className=\"emailList__list\">\r\n                {emails.map(({ id, data: { to, subject, message, timestamp \r\n                } }) => (\r\n                    <EmailRow\r\n                       id={id}\r\n                       key={id}\r\n                       title={to}\r\n                       subject={subject}\r\n                       description={message}\r\n                       time={new Date(timestamp?.seconds * 1000).toUTCString()}\r\n                    />    \r\n                ))}\r\n               <EmailRow\r\n                   title=\"React\"\r\n                   subject=\"Hey fellow Programmer!!!!\"\r\n                   description=\"This is a test\"\r\n                   time=\"10pm\"\r\n                />\r\n                <EmailRow\r\n                   title=\"React\"\r\n                   subject=\"Programming is FUN!!!!\"\r\n                   description=\"This is a test\"\r\n                   time=\"10pm\"\r\n                />\r\n                <EmailRow\r\n                   title=\"React\"\r\n                   subject=\"Hey fellow Programmer!!!!\"\r\n                   description=\"This is a test\"\r\n                   time=\"10pm\"\r\n                />\r\n                <EmailRow\r\n                   title=\"React\"\r\n                   subject=\"Programming is FUN!!!!\"\r\n                   description=\"This is a test\"\r\n                   time=\"10pm\"\r\n                />          \r\n                <EmailRow\r\n                   title=\"React\"\r\n                   subject=\"Hey fellow Programmer!!!!\"\r\n                   description=\"This is a test\"\r\n                   time=\"10pm\"\r\n                />\r\n                <EmailRow\r\n                   title=\"React\"\r\n                   subject=\"Programming is FUN!!!!\"\r\n                   description=\"This is a test\"\r\n                   time=\"10pm\"\r\n                />  \r\n                <EmailRow\r\n                   title=\"React\"\r\n                   subject=\"Hey fellow Programmer!!!!\"\r\n                   description=\"This is a test\"\r\n                   time=\"10pm\"\r\n                />\r\n                <EmailRow\r\n                   title=\"React\"\r\n                   subject=\"Programming is FUN!!!!\"\r\n                   description=\"This is a test\"\r\n                   time=\"10pm\"\r\n                />          \r\n                <EmailRow\r\n                   title=\"React\"\r\n                   subject=\"Hey fellow Programmer!!!!\"\r\n                   description=\"This is a test\"\r\n                   time=\"10pm\"\r\n                />\r\n                <EmailRow\r\n                   title=\"React\"\r\n                   subject=\"Programming is FUN!!!!\"\r\n                   description=\"This is a test\"\r\n                   time=\"10pm\"\r\n                />          \r\n                <EmailRow\r\n                   title=\"React\"\r\n                   subject=\"Hey fellow Programmer!!!!\"\r\n                   description=\"This is a test\"\r\n                   time=\"10pm\"\r\n                />\r\n                <EmailRow\r\n                   title=\"React\"\r\n                   subject=\"Programming is FUN!!!!\"\r\n                   description=\"This is a test\"\r\n                   time=\"10pm\"\r\n                />          \r\n                <EmailRow\r\n                   title=\"React\"\r\n                   subject=\"Hey fellow Programmer!!!!\"\r\n                   description=\"This is a test\"\r\n                   time=\"10pm\"\r\n                />\r\n                <EmailRow\r\n                   title=\"React\"\r\n                   subject=\"Programming is FUN!!!!\"\r\n                   description=\"This is a test\"\r\n                   time=\"10pm\"\r\n                />          \r\n                <EmailRow\r\n                   title=\"React\"\r\n                   subject=\"Hey fellow Programmer!!!!\"\r\n                   description=\"This is a test\"\r\n                   time=\"10pm\"\r\n                />\r\n                <EmailRow\r\n                   title=\"React\"\r\n                   subject=\"Programming is FUN!!!!\"\r\n                   description=\"This is a test\"\r\n                   time=\"10pm\"\r\n                />                           \r\n            </div> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmailList\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const userSlice = createSlice({\r\n  name: 'user',\r\n  initialState: {\r\n      user: null,\r\n  },\r\n  reducers: {\r\n    login: (state, action) => {\r\n      state.user = action.payload;\r\n    },\r\n    logout: state => {\r\n      state.user = null;\r\n    },\r\n   },\r\n});\r\n\r\nexport const { login, logout } = userSlice.actions;\r\n\r\nexport const selectUser = (state) => state.user.user;\r\n\r\nexport default userSlice.reducer;\r\n\r\n","import React from 'react'\r\nimport './Header.css';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { Avatar, IconButton } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ArrowDropDownIcon  from '@material-ui/icons/ArrowDropDown';\r\nimport AppsIcon  from '@material-ui/icons/Apps';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport { logout, selectUser } from './features/userSlice';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { auth } from './firebase';\r\n\r\n\r\nfunction Header() {\r\n\r\n    const user = useSelector(selectUser);\r\n    const dispatch = useDispatch();\r\n\r\n    const signOut = () => {\r\n        auth.signOut().then(() => {\r\n          dispatch(logout());\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className='header'>\r\n           <div className=\"header__left\">\r\n               <IconButton>\r\n                  <MenuIcon/>\r\n               </IconButton>\r\n               <img src=\"https://i.pinimg.com/originals/ae/47/fa/ae47fa9a8fd263aa364018517020552d.png\"\r\n                alt=\"\" />\r\n               \r\n            \r\n            </div>\r\n\r\n            <div className=\"header__middle\">\r\n               <SearchIcon  />\r\n               <input placeholder=\"Search mail\" type=\"text\"/> \r\n               <ArrowDropDownIcon className=\"header__inputCaret\" />\r\n\r\n            </div>\r\n            <div className=\"header__right\">\r\n                <IconButton>\r\n                    <AppsIcon/>\r\n                </IconButton>\r\n                <IconButton>\r\n                    <NotificationsIcon/>\r\n                </IconButton>\r\n                <Avatar onClick={signOut} src={user?.photoUrl} />\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import { Button } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from './features/userSlice';\r\nimport { auth, provider } from './firebase';\r\nimport \"./Login.css\";\r\n\r\nfunction Login() {\r\n    const dispatch = useDispatch();\r\n    \r\n    const signIn = () => {\r\n        auth.signInWithPopup(provider)\r\n        .then(({user}) => {\r\n            dispatch(login({\r\n                displayName: user.displayName,\r\n                email: user.email,\r\n                photoUrl: user.photoURL\r\n\r\n            }))\r\n        })\r\n        .catch(error => alert(error.message))\r\n    };\r\n    \r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login__container\">\r\n                <img src=\"https://static.dezeen.com/uploads/2020/10/gmail-google-logo-rebrand-workspace-design_dezeen_2364_col_0.jpg\"  alt=\"\" />\r\n \r\n                <Button variant=\"contained\" color=\"primary\" onClick={signIn}>Login</Button>\r\n            \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","import { IconButton } from '@material-ui/core';\r\nimport MoveToInboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport React from 'react'\r\nimport './Mail.css';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport WatchLaterIcon from '@material-ui/icons/WatchLater';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport LabelImportantIcon from '@material-ui/icons/LabelImportant';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { useHistory } from 'react-router-dom';\r\nimport UnfoldMoreIcon from '@material-ui/icons/UnfoldMore';\r\nimport PrintIcon from '@material-ui/icons/Print';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport { selectOpenMail } from './features/mailSlice';\r\nimport { useSelector } from 'react-redux';\r\n\r\nfunction Mail() {\r\n    const history = useHistory();\r\n\r\n    const selectedMail = useSelector(selectOpenMail); \r\n    return (\r\n        <div className=\"mail\">\r\n            <div className=\"mail__tools\">\r\n                <div className=\"mails__toolsLeft\">\r\n                    <IconButton onClick={() => history.push(\"/\")}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <MoveToInboxIcon/>\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <ErrorIcon/>\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <DeleteIcon/>\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <EmailIcon/>\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <WatchLaterIcon/>\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <CheckCircleIcon/>\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <LabelImportantIcon/>\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <MoreVertIcon/>\r\n                    </IconButton>\r\n\r\n                </div>\r\n                <div className=\"mail__toolsRight\">\r\n                    <IconButton>\r\n                        <UnfoldMoreIcon/>\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <PrintIcon/>\r\n                    </IconButton>\r\n\r\n                    <IconButton>\r\n                        <ExitToAppIcon/>\r\n                    </IconButton>\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"mail__body\">\r\n                <div className=\"mail__bodyHeader\">\r\n                    <h2>{selectedMail?.subject}</h2>\r\n                    <LabelImportantIcon className=\"mail__important\" />\r\n                    <p>{selectedMail?.title}</p>\r\n                    <p className=\"mail__time\">{selectedMail?.time}</p>\r\n                </div>\r\n                <div className=\"mail__message\">\r\n                    <p>{selectedMail?.description}</p>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Mail;\r\n","import { Button, IconButton } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { closeSendMessage } from './features/mailSlice';\r\nimport { db } from './firebase';\r\nimport \"./SendMail.css\";\r\nimport firebase from 'firebase';\r\n\r\n\r\nfunction SendMail() {\r\n    const { register,handleSubmit,watch, formState: {errors} } = useForm();\r\n    const dispatch = useDispatch();\r\n    \r\n    const onSubmit = (formData) => {\r\n        console.log(formData)\r\n        db.collection('emails').add({\r\n            to: formData.to,\r\n            subject: formData.subject,\r\n            message: formData.message,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n\r\n        })\r\n        \r\n        dispatch(closeSendMessage); \r\n    };\r\n\r\n    return (\r\n        <div className=\"sendMail\">\r\n            <div className=\"sendMail__header\">\r\n                <h3>New Message</h3>\r\n                <IconButton>\r\n                <CloseIcon onClick={() => dispatch(closeSendMessage())}\r\n                className=\"sendMail__close\" />\r\n                </IconButton>\r\n            </div>\r\n            <form onSubmit={handleSubmit(onSubmit)}> \r\n                <input \r\n                  name=\"to\"\r\n                  placeholder=\"To\" \r\n                  type=\"email\" \r\n                  {...register(\"to\" ,{ required: true })}\r\n                \r\n                />\r\n                {errors.to && <p className=\"sendMail__error\">To is Required</p>}\r\n                <input \r\n                  name=\"subject\" \r\n                  placeholder=\"Subject\" \r\n                  type=\"text\" \r\n                  {...register('subject',{ required: true })}\r\n                />\r\n                {errors.subject && (<p className=\"sendMail__error\">Subject is Required</p>)}\r\n                <input \r\n                  name=\"message\"\r\n                  placeholder=\"Message\" \r\n                  type=\"text\" \r\n                  className=\"sendMail__message\" \r\n                  {...register(\"message\",{ required: true })}\r\n                /> \r\n                {errors.message && (<p className=\"sendMail__error\">Message is Required</p>)}\r\n                   <div className=\"sendMail__options\">\r\n                       <Button className=\"sendMail__send\" variant=\"contained\" color=\"primary\" type=\"submit\">Send</Button>\r\n                   </div> \r\n            </form>  \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SendMail;\r\n","import React from 'react'\r\nimport './SidebarOption.css';\r\n\r\nfunction SidebarOption({Icon, title, number, selected}) {\r\n    return (\r\n        <div className= {`sidebarOption ${selected && 'sidebarOption--active'}`}>\r\n            <Icon/>\r\n            <h3>{title}</h3>\r\n            <p>{number}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarOption\r\n","import { Button, IconButton } from '@material-ui/core'\r\nimport InboxIcon from '@material-ui/icons/Inbox'\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport React from 'react'\r\nimport \"./Sidebar.css\"\r\nimport SidebarOption from './SidebarOption'\r\nimport StarIcon from '@material-ui/icons/Star'\r\nimport LabelImportantIcon  from '@material-ui/icons/LabelImportant'\r\nimport NearMeIcon from '@material-ui/icons/NearMe'\r\nimport NoteIcon from '@material-ui/icons/Note'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport PersonIcon from '@material-ui/icons/Person'\r\nimport DuoIcon from '@material-ui/icons/Duo'\r\nimport PhoneIcon from '@material-ui/icons/Phone'\r\nimport { openSendMessage } from './features/mailSlice'\r\nimport { useDispatch } from 'react-redux'\r\n\r\n\r\nfunction Sidebar() {\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <Button \r\n               startIcon={<AddIcon fontSize=\"large\" />}\r\n               className=\"sidebar__compose\"\r\n               onClick= {() => dispatch(openSendMessage())}\r\n            >\r\n               Compose\r\n            </Button>\r\n            <SidebarOption Icon={InboxIcon} title=\"Inbox\" number={54} selected={true} />\r\n            <SidebarOption Icon={StarIcon} title=\"Starred\" number={54} />\r\n            <SidebarOption Icon={LabelImportantIcon} title=\"Important\" number={54} />\r\n            <SidebarOption Icon={NearMeIcon} title=\"Sent\" number={54} />\r\n            <SidebarOption Icon={NoteIcon} title=\"Drafts\" number={54} />\r\n            <SidebarOption Icon={ExpandMoreIcon} title=\"More\" number={54} />\r\n\r\n            <div className=\"sidebar__footer\">\r\n                <div className=\"sidebar__footerIcons\">\r\n                    <IconButton>\r\n                        <PersonIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <DuoIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <PhoneIcon/>\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { BrowserRouter as Router,Switch,Route,Link } from 'react-router-dom';\nimport './App.css';\nimport EmailList from './EmailList';\nimport { selectSendMessageIsOpen } from './features/mailSlice';\nimport { login, selectUser } from './features/userSlice';\nimport { auth } from './firebase';\nimport Header from './Header';\nimport Login from './Login';\nimport Mail from './Mail';\nimport SendMail from './SendMail';\nimport Sidebar from './Sidebar';\n\nfunction App() {\n  const sendMessageIsOpen = useSelector(selectSendMessageIsOpen);\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    auth.onAuthStateChanged((user) => {\n      if (user) {\n        dispatch(\n          login({\n            displayName: user.displayName,\n            email: user.email,\n            photoUrl: user.photoURL,\n          })\n        );\n      }\n    });\n  \n  },[])\n\n  return (\n    <Router>\n      {!user ? (\n        <Login />\n      ) : (\n        <div className=\"app\">\n          <Header />\n\n          <div className=\"app__body\">\n            <Sidebar/>\n            <Switch>\n              <Route path=\"/mail\">\n                <Mail/>\n              </Route>\n              <Route path=\"/\">\n                <EmailList />\n              </Route>\n            </Switch>\n          </div>\n          {sendMessageIsOpen && <SendMail />}\n        </div> \n\n      )}\n      \n    </Router>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport mailReducer from '../features/mailSlice';\nimport userReducer from '../features/userSlice';\n\nexport const store = configureStore({\n  reducer: {\n    mail: mailReducer,\n    user: userReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}